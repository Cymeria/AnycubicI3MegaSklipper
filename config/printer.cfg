[mcu]
serial = /dev/serial/by-id/usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0

[mcu rpi]
serial: /tmp/klipper_host_mcu

[include moonraker_obico_macros.cfg]
# This file contains pin mappings for the Anycubic i3 Mega with
# Ultrabase from 2017. (This config may work on an Anycubic i3 Mega v1
# prior to the Ultrabase if you comment out the definition of the
# endstop_pin in the stepper_z1 section.) To use this config, the
# firmware should be compiled for the AVR atmega2560.
 
# See docs/Config_Reference.md for a description of parameters.

# Arduino aliases for atmega2560/1280 (Arduino mega) boards
[board_pins arduino-mega]
aliases:
    ar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,
    ar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,
    ar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,
    ar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,
    ar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,
    ar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,
    ar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,
    ar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,
    ar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,
    ar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,
    ar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,
    ar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,
    ar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,
    ar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,
    analog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,
    analog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,
    analog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,
    analog15=PK7,
    # Marlin adds these additional aliases
    ml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,
    ml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,
    ml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,
    ml85=PH7
 
[stepper_x]
step_pin: PF0
dir_pin: PF1
enable_pin: !PD7
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PE5
position_min: -5
position_endstop: -5
position_max: 210
homing_speed: 30.0
 
[stepper_y]
step_pin: PF6
dir_pin: !PF7
enable_pin: !PF2
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PL7
position_endstop: 0
position_max: 210
homing_speed: 30.0
 
[stepper_z]
step_pin: PL3
dir_pin: PL1
enable_pin: !PK0
microsteps: 16
rotation_distance: 8
endstop_pin: ^!PD3
position_endstop: 0.0
position_max: 205
homing_speed: 5.0
 
[stepper_z1]
step_pin: PC1
dir_pin: PC3
enable_pin: !PC7
microsteps: 16
rotation_distance: 8
endstop_pin: ^!PL6
 
[extruder]
step_pin: PA4
dir_pin: PA6
enable_pin: !PA2
control = pid
microsteps: 16
rotation_distance: 7.495
## original extruder stepper motor
#step_distance = .00247
## NEMA17 23mm stepper motor
#step_distance = .00236
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin: PB4
sensor_type: ATC Semitec 104GT-2
sensor_pin: PK5
min_temp = 0
max_temp = 260
max_extrude_only_distance = 150.0
smooth_time = 1
min_extrude_temp = 170
pressure_advance = 0.1
max_extrude_cross_section = 150

#[tmc2208 stepper_x]
#uart_pin: PG5
#interpolate: True
#run_current: 0.850
#hold_current: 0.500
#stealthchop_threshold: 999999

#[tmc2208 stepper_y]
#uart_pin: PE3
#interpolate: True
#run_current: 0.850
#hold_current: 0.500
#stealthchop_threshold: 999999

#[tmc2208 extruder]
#uart_pin: PB5
#interpolate: True
#run_current: 0.850
#hold_current: 0.500
#stealthchop_threshold: 0

[heater_fan extruder_fan]
pin: PL5
 
[heater_bed]
heater_pin: PH5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK6
control: pid
pid_Kp: 74.883
pid_Ki: 1.809
pid_Kd: 775.038
min_temp: 0
max_temp: 110
smooth_time = 2
 
[fan]
pin: PH6
 
#[mcu host]
#serial: /tmp/klipper_host_mcu

## [output_pin LEDlights]
## pin: rpi:gpio17
## value: 1
## shutdown_value: 1

[temperature_fan raspberry_pi]
pin: rpi:gpio14
max_power: 1.0
shutdown_speed: 0.0
control: watermark
sensor_type: temperature_host
#control: pid
#pid_kp: 1.0
#pid_ki: 0.5
#pid_kd: 2.0
min_speed: 0
max_speed: 0.8
min_temp: 0
max_temp: 100
target_temp: 50.0
kick_start_time: 0.8
off_below: 0.1


#[temperature_fan raspberry_pi]
#sensor_type: temperature_host
#min_temp: 0
#max_temp: 100

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 10
max_z_accel: 60
 
[heater_fan stepstick_fan]
pin: PH4
 
# additional manual config
# see https://docs.fluidd.xyz/configuration/initial_setup
 
[virtual_sdcard]
path:/home/pi/printer_data/gcodes
 
[display_status]
 

[pause_resume]
recover_velocity: 60.
#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s).  Default is 50.0 mm/s.

# Filament Switch Sensor.  Support for filament insert and runout detection
# using a switch sensor, such as an endstop switch.
[filament_switch_sensor filament_sensor]
pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
runout_gcode:
    M118 Filament Runout Detected
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
insert_gcode:
    M118 Filament Load Detected
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode.  It may be useful to
#   increase this delay if Octoprint exhibits strange pause behavior.
#   Default is 0.5 seconds.
switch_pin: ^!PD2
#   The pin on which the switch is connected. This parameter must be
#   provided.
 
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 
 
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}
 
[gcode_macro CANCEL_PRINT]
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  G91		  #relative positioning
  # G1 E-.1 
  G10
  G1 Z10 Y50 F1000	#Z axis up 10mm, Y out 50mm
  G90		  #absolute positioning
  G28 X0 	#home X axis
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  CANCEL_PRINT_BASE
 
[gcode_macro START_PRINT]
gcode:
  G28 X0 Y0                     ; move X/Y to min endstops
  G28 Z0                        ; move Z to min endstops
  G1 Z20 Y5 F500                ; move nozzle away from bed
  G92 E0                        ; zero the extruded length
  G1 E2 F2400                    ; extrude 5mm of feed stock
  G92 E0                        ; zero the extruded length again
  M117 Printing...

 
[gcode_macro END_PRINT]
gcode:
  M400                          ; Clear Buffer
  M104 S0                       ; turn off extruder
  M140 S0                       ; turn off bed
  G10                           ; retract
  G91                           ; relative positioning
  G1 E-0.03 Z1.00 X20.0 Y20.0   ; move nozzle to remove stringing
  M106 S0                       ; turn off fan
  G1 Z20                        ; move nozzle up 20mm
  G90                           ; absolute positioning
  G0 X0 Y175                    ; park nozzle at rear
  M84                           ; steppers off
  G4 P250                       ; dwell
  _TIMELAPSE_NEW_FRAME
  
[gcode_macro M205]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}

[output_pin BEEPER_pin]
pin: PC6
pwm: True
#value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1000

[gcode_macro M300_]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    {% if S > 0 %}
      SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S }
      G4 P{P}
    {% else %}
      G4 P{P}
    {% endif %}
      SET_PIN PIN=BEEPER_pin VALUE=0

[gcode_macro M300]
gcode:
    {% set S = params.S|default(1000)|int %} ; S sets the tone frequency
    {% set P = params.P|default(100)|int %} ; P sets the tone duration
    {% set L = 0.5 %} ; L varies the PWM on time, close to 0 or 1 the tone gets a bit quieter. 0.5 is a symmetric waveform
    {% if S <= 0 %} ; dont divide through zero
        {% set F = 1 %}
        {% set L = 0 %}
    {% elif S >= 10000 %} ;max frequency set to 10kHz
        {% set F = 0 %}
    {% else %}
        {% set F = 1/S %} ;convert frequency to seconds
    {% endif %}
    SET_PIN PIN=BEEPER_pin VALUE={L} CYCLE_TIME={F} ;Play tone
    G4 P{P} ;tone duration
    SET_PIN PIN=BEEPER_pin VALUE=0

[display_status]

[include timelapse.cfg]

[gcode_macro A]
gcode:
  G1 Z5.00 X20.0 Y20.0
  G1 Z0
[gcode_macro B]
gcode:
  G1 Z5.00 X180.0 Y20.0
  G1 Z0
[gcode_macro C]
gcode:
  G1 Z5.00 X180.0 Y180.0
  G1 Z0
[gcode_macro D]
gcode:
  G1 Z5.00 X20.0 Y180.0
  G1 Z0


[firmware_retraction]
retract_length: 5
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 40
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 1
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 10
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

[gcode_macro M420]
description: Load the current mesh
gcode:
    BED_MESH_PROFILE LOAD=default
    
#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 20.315
#*# pid_ki = 0.748
#*# pid_kd = 137.890
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 73.517
#*# pid_ki = 1.696
#*# pid_kd = 796.738
